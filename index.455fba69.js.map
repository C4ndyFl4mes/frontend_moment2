{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["var $ac43a74d429af77f$exports = {};\nconst $ac43a74d429af77f$var$searchINPUT = document.getElementById(\"search\"); // Deklarerar sökfältets element.\nconst $ac43a74d429af77f$var$sortCodeBTN = document.getElementById(\"sort-code\");\nconst $ac43a74d429af77f$var$sortCourseNameBTN = document.getElementById(\"sort-coursename\");\nconst $ac43a74d429af77f$var$sortProgressionBTN = document.getElementById(\"sort-progression\");\nconst $ac43a74d429af77f$var$table = document.getElementById(\"table-body\"); // Deklarerar tabellkroppens element.\n// En funktion som startar vid inladdning av sidan. Dens primära uppgift är att anropa funktionerna getData och renderTableContent. \nwindow.onload = async ()=>{\n    try {\n        const data = await $ac43a74d429af77f$var$getData(); // <------------------------- Väntar på att data ska returneras.\n        // console.table(data);\n        // Lägger till en input lyssnare på sökfältet.\n        $ac43a74d429af77f$var$searchINPUT.addEventListener(\"input\", ()=>{\n            $ac43a74d429af77f$var$filterTable(data);\n        });\n        // Eventlyssnare för sortering. sortTable tar två parametrar, data och vilken kolumn det handlar om.\n        $ac43a74d429af77f$var$sortCodeBTN.addEventListener(\"click\", ()=>{\n            $ac43a74d429af77f$var$sortTable(data, \"code\");\n        });\n        $ac43a74d429af77f$var$sortCourseNameBTN.addEventListener(\"click\", ()=>{\n            $ac43a74d429af77f$var$sortTable(data, \"coursename\");\n        });\n        $ac43a74d429af77f$var$sortProgressionBTN.addEventListener(\"click\", ()=>{\n            $ac43a74d429af77f$var$sortTable(data, \"progression\");\n        });\n        $ac43a74d429af77f$var$renderTableContent(data); // Renderar ut vid första inladdningen av sidan.\n    } catch (error) {\n        console.error(error);\n    }\n};\n// Sorterar datan beroende på vilken kolumnknapp som trycktes på.\nfunction $ac43a74d429af77f$var$sortTable(data, n) {\n    let sortedRowsData = data;\n    switch(n){\n        case \"code\":\n            if ($ac43a74d429af77f$var$sortCodeBTN.className === \"button up\") {\n                sortedRowsData = data.sort((a, b)=>a.code > b.code ? 1 : -1);\n                $ac43a74d429af77f$var$sortCodeBTN.className = \"button down\";\n                $ac43a74d429af77f$var$sortCodeBTN.textContent = \"Stigande\";\n            } else if ($ac43a74d429af77f$var$sortCodeBTN.className === \"button down\") {\n                sortedRowsData = data.sort((a, b)=>b.code > a.code ? 1 : -1);\n                $ac43a74d429af77f$var$sortCodeBTN.className = \"button up\";\n                $ac43a74d429af77f$var$sortCodeBTN.textContent = \"Fallande\";\n            }\n            break;\n        case \"coursename\":\n            if ($ac43a74d429af77f$var$sortCourseNameBTN.className === \"button up\") {\n                sortedRowsData = data.sort((a, b)=>a.coursename > b.coursename ? 1 : -1);\n                $ac43a74d429af77f$var$sortCourseNameBTN.className = \"button down\";\n                $ac43a74d429af77f$var$sortCourseNameBTN.textContent = \"Stigande\";\n            } else if ($ac43a74d429af77f$var$sortCourseNameBTN.className === \"button down\") {\n                sortedRowsData = data.sort((a, b)=>b.coursename > a.coursename ? 1 : -1);\n                $ac43a74d429af77f$var$sortCourseNameBTN.className = \"button up\";\n                $ac43a74d429af77f$var$sortCourseNameBTN.textContent = \"Fallande\";\n            }\n            break;\n        case \"progression\":\n            if ($ac43a74d429af77f$var$sortProgressionBTN.className === \"button up\") {\n                sortedRowsData = data.sort((a, b)=>a.progression > b.progression ? 1 : -1);\n                $ac43a74d429af77f$var$sortProgressionBTN.className = \"button down\";\n                $ac43a74d429af77f$var$sortProgressionBTN.textContent = \"Stigande\";\n            } else if ($ac43a74d429af77f$var$sortProgressionBTN.className === \"button down\") {\n                sortedRowsData = data.sort((a, b)=>b.progression > a.progression ? 1 : -1);\n                $ac43a74d429af77f$var$sortProgressionBTN.className = \"button up\";\n                $ac43a74d429af77f$var$sortProgressionBTN.textContent = \"Fallande\";\n            }\n            break;\n        default:\n            console.log(\"!?\");\n            break;\n    }\n    $ac43a74d429af77f$var$filterTable(sortedRowsData);\n}\n// Filtrerar utefter vad textsträngarna innehåller.\nfunction $ac43a74d429af77f$var$filterTable(data) {\n    const phrase = $ac43a74d429af77f$var$searchINPUT.value;\n    const filteredData = data.filter((fd)=>fd.code.toLowerCase().includes(phrase.toLowerCase()) || fd.coursename.toLowerCase().includes(phrase.toLowerCase()));\n    // Ifall sökrutan blir tom ska alla tabellrader synas.\n    if (phrase === \"\") $ac43a74d429af77f$var$renderTableContent(data);\n    else $ac43a74d429af77f$var$renderTableContent(filteredData);\n}\n// Hämtar data från extern json-fil.\nasync function $ac43a74d429af77f$var$getData() {\n    try {\n        const resp = await fetch(\"https://webbutveckling.miun.se/files/ramschema_ht24.json\"); // Hämtar.\n        return await resp.json(); // Väntar på response och konverterar JSON till en JS array av objekt och därefter returnerar.\n    } catch (error) {\n        console.error(error);\n    }\n}\n// Renderar/uppdaterar tabellinnehållet.\nfunction $ac43a74d429af77f$var$renderTableContent(data) {\n    $ac43a74d429af77f$var$table.innerHTML = \"\";\n    data.forEach((rowData)=>{\n        $ac43a74d429af77f$var$table.innerHTML += `<tr><td>${rowData.code}</td><td>${rowData.coursename}</td><td>${rowData.progression}</td></tr>`;\n    });\n}\n\n\n//# sourceMappingURL=index.455fba69.js.map\n","const searchINPUT = document.getElementById(\"search\"); // Deklarerar sökfältets element.\r\nconst sortCodeBTN = document.getElementById(\"sort-code\");\r\nconst sortCourseNameBTN = document.getElementById(\"sort-coursename\");\r\nconst sortProgressionBTN = document.getElementById(\"sort-progression\");\r\nconst table = document.getElementById(\"table-body\");   // Deklarerar tabellkroppens element.\r\n\r\n// En funktion som startar vid inladdning av sidan. Dens primära uppgift är att anropa funktionerna getData och renderTableContent. \r\nwindow.onload = async () => {\r\n    try {\r\n        const data = await getData(); // <------------------------- Väntar på att data ska returneras.\r\n        // console.table(data);\r\n        // Lägger till en input lyssnare på sökfältet.\r\n        searchINPUT.addEventListener(\"input\", () => {\r\n            filterTable(data);\r\n        });\r\n\r\n        // Eventlyssnare för sortering. sortTable tar två parametrar, data och vilken kolumn det handlar om.\r\n        sortCodeBTN.addEventListener(\"click\", () => {\r\n            sortTable(data, \"code\");\r\n        });\r\n\r\n        sortCourseNameBTN.addEventListener(\"click\", () => {\r\n            sortTable(data, \"coursename\");\r\n        });\r\n\r\n        sortProgressionBTN.addEventListener(\"click\", () => {\r\n            sortTable(data, \"progression\");\r\n        });\r\n\r\n        renderTableContent(data); // Renderar ut vid första inladdningen av sidan.\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n// Sorterar datan beroende på vilken kolumnknapp som trycktes på.\r\nfunction sortTable(data, n) {\r\n    let sortedRowsData = data;\r\n\r\n    switch (n) {\r\n        case \"code\":\r\n            if (sortCodeBTN.className === \"button up\") {\r\n                sortedRowsData = data.sort((a, b) => (a.code > b.code) ? 1 : -1);\r\n                sortCodeBTN.className = \"button down\";\r\n                sortCodeBTN.textContent = \"Stigande\";\r\n            } else if (sortCodeBTN.className === \"button down\") {\r\n                sortedRowsData = data.sort((a, b) => (b.code > a.code) ? 1 : -1);\r\n                sortCodeBTN.className = \"button up\";\r\n                sortCodeBTN.textContent = \"Fallande\";\r\n            }\r\n            break;\r\n        case \"coursename\":\r\n            if (sortCourseNameBTN.className === \"button up\") {\r\n                sortedRowsData = data.sort((a, b) => (a.coursename > b.coursename) ? 1 : -1);\r\n                sortCourseNameBTN.className = \"button down\";\r\n                sortCourseNameBTN.textContent = \"Stigande\";\r\n            } else if (sortCourseNameBTN.className === \"button down\") {\r\n                sortedRowsData = data.sort((a, b) => (b.coursename > a.coursename) ? 1 : -1);\r\n                sortCourseNameBTN.className = \"button up\";\r\n                sortCourseNameBTN.textContent = \"Fallande\";\r\n            }\r\n            break;\r\n        case \"progression\":\r\n            if (sortProgressionBTN.className === \"button up\") {\r\n                sortedRowsData = data.sort((a, b) => (a.progression > b.progression) ? 1 : -1);\r\n                sortProgressionBTN.className = \"button down\";\r\n                sortProgressionBTN.textContent = \"Stigande\";\r\n            } else if (sortProgressionBTN.className === \"button down\") {\r\n                sortedRowsData = data.sort((a, b) => (b.progression > a.progression) ? 1 : -1);\r\n                sortProgressionBTN.className = \"button up\";\r\n                sortProgressionBTN.textContent = \"Fallande\";\r\n            }\r\n            break;\r\n        default:\r\n            console.log(\"!?\");\r\n            break;\r\n    }\r\n    filterTable(sortedRowsData);\r\n}\r\n\r\n// Filtrerar utefter vad textsträngarna innehåller.\r\nfunction filterTable(data) {\r\n    const phrase = searchINPUT.value;\r\n    const filteredData = data.filter(fd => fd.code.toLowerCase().includes(phrase.toLowerCase()) || fd.coursename.toLowerCase().includes(phrase.toLowerCase()));\r\n    // Ifall sökrutan blir tom ska alla tabellrader synas.\r\n    if (phrase === \"\") {\r\n        renderTableContent(data);\r\n    } else {\r\n        renderTableContent(filteredData);\r\n    }\r\n}\r\n// Hämtar data från extern json-fil.\r\nasync function getData() {\r\n    try {\r\n        const resp = await fetch(\"https://webbutveckling.miun.se/files/ramschema_ht24.json\"); // Hämtar.\r\n        return await resp.json(); // Väntar på response och konverterar JSON till en JS array av objekt och därefter returnerar.\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n}\r\n\r\n// Renderar/uppdaterar tabellinnehållet.\r\nfunction renderTableContent(data) {\r\n    table.innerHTML = \"\";\r\n    data.forEach(rowData => {\r\n        table.innerHTML += `<tr><td>${rowData.code}</td><td>${rowData.coursename}</td><td>${rowData.progression}</td></tr>`\r\n    });\r\n}"],"names":["$ac43a74d429af77f$var$searchINPUT","document","getElementById","$ac43a74d429af77f$var$sortCodeBTN","$ac43a74d429af77f$var$sortCourseNameBTN","$ac43a74d429af77f$var$sortProgressionBTN","$ac43a74d429af77f$var$table","$ac43a74d429af77f$var$sortTable","data","n","sortedRowsData","className","sort","a","b","code","textContent","coursename","progression","console","log","$ac43a74d429af77f$var$filterTable","phrase","value","filteredData","filter","fd","toLowerCase","includes","$ac43a74d429af77f$var$renderTableContent","$ac43a74d429af77f$var$getData","resp","fetch","json","error","innerHTML","forEach","rowData","window","onload","addEventListener"],"version":3,"file":"index.455fba69.js.map"}